Team Bord: Austin Ngan (Gerald), Thomas Yu (Perry), Mark Zhu (Bob the Third Jr), Roshani Shrestha (Pete)
SoftDev
P00 -- Web Blog Hosting Site

roshaniS -- 2021-10-28 19:39
- Organized the repo and added design_wiki0.pdf.
Feedback received for design_wiki0.pdf:
- Generally, the diagrams and information were good.
- The component map we made for this was actually a site map. Component maps should include backend information.

roshaniS -- 2021-10-28 22:30
- Added the description of the website/app and the launch codes to README.md.

thomasY -- 2021-10-28 23:06
- Housecleaning (moving things around in the repo)
- Updated component map to better show what is happening on the backend of the program
- Added flask sessions to the component map to show when the user is logged in and can edit their blog posts

thomasY -- 2021-10-29 09:04
- Added design_wiki1 to the repo

austinN -- 2021-10-29 09:20
- added initial app skeleton for the project
- added temporary templates to serve as a login feature (will change SOON)

roshaniS -- 2021-10-30 18:08
- Added additional templates (register.html, userblog.html)
- Modified templates to match variables in __init__.py
- Modified __init__.py so that it could create a simple working site with login capabilities

roshaniS -- 2021-10-30 18:22
- Added back actual design_wiki0.pdf
- Fixed because the previous pdf was actually of the first version of our design document (for the web log hosting site)
- Feedback from that design wiki document is in my first devlog entry

thomasY -- 2021-10-31 18:11
- Added correct design_wiki1.pdf
  - Feedback:
    - Most the design document lacked the needed clarity to proceed (components, database organization, maps)
    - Site map was too tiny to read
- Updated requirements.txt so that user can use the file to install the required packages

thomasY -- 2021-10-31 18:54
- Updated README with more detailed launch codes

thomasY -- 2021-10-31 21:27
- Fixed issues with launch codes
  - Wasn't in the correct directory when installing requirements
  - Replaced pip with pip3

austinN -- 2021-11-01 09:22
- added initial skeleton for database creation of users and their login info

roshaniS -- 2021-11-01 19:03
- Added loginpage.py to display the login and register pages
- Moved the code from __init__.py to loginpage.py but kept the original code in __init__.py (will change this soon)
- Modified the code so that logging in would allow the user to stay at the root
- Removed the condition for "GET"
- Added the register button and the functions associated with it (did not include the username/password checks using the database yet; only used hardcoded
  username/password, but will change soon)
- Fixed the logout function so that it redirects the user to the root and not just renders the login.html template
- There is still an error with the site after the user registers successfully; since the user is still on the /auth route, the user can only keep registering on
  the login page that is rendered after registering the first time. The user cannot login normally.

roshaniS -- 2021-11-01 19:07
- Fixed the errors that were present in loginpage.py ("UnboundLocalError: local variable 'tempUser' referenced before assignment")
  - These errors were present in the disp_loginpage() and authenticate() functions
  - Moved the sections of code after tempUser and tempPass were assigned back under the if statement checking if request.method == 'POST'
  - In the disp_loginpage() function: all the code below the variable assignments mentioned above up until "if "user" in session"
  - In the authenticate() function: all the code below the variable assignments mentioned above up until the end of the function

roshaniS -- 2021-11-02 09:31
- Added a dictionary for all the usernames and passwords, including new ones from registration
- Used this to check if the login and register capabilities worked
- There is still the error with the user staying on the /auth route and not being able to log in after registering successfully. If the user goes back to the root,
  however, they are able to log in successfully.

roshaniS -- 2021-11-02 16:32
- Emptied __init__.py

markZ -- 2021-11-02 16:45
-Hardcoded a blog post page template
-Tweaked the loginpage.py so that we can have a button to get to the blog post page and another button to get back to the main blog page
-Started work on a template for editing blog posts

thomasY -- 2021-11-02 17:02
- Made it so that duplicate usernames can't be added to the logins table

austinN -- 2021-11-02 17:08
- Added text box in the editBlog file (will feed information to the blog database later on)
- Added createBlog method in loginpage.py so that editing can at least have a start
- Added Create Post button in userblog.html

thomasY -- 2021--11-02 17:21
- Moved the check on the username and password to the authenticate function
- Created a new register_auth path to check the username and password when a user is registering
- Updated login.html and register.html with new actions in the forms

austinN -- 2021-11-03 09:03
- Touched up 'Finish Post' button
- Added 'Cancel Post' button

roshaniS -- 2021-11-03 09:06
- Fixed the issues with login after successful registration using redirect and url_for
- The user can now log in to the site after registering successfully (only with the hardcoded username and password, not the new username and password)

roshaniS -- 2021-11-04 09:06
- Replaced redirect and url_for with render_template to make it simpler
- Previously did not work correctly, which is why redirect and url_for were used, but after testing again, render_template worked

austinN -- 2021-11-04 09:16
- Added function in userdb.py that adds login info to database
- Added addBlog function (not fully working) that will give a blog a random key and add text corresponding to the blog

austinN -- 2021-11-05 09:15
- loginpage.py now imports userdb.py, register is now fully functioning and adds login info to a database

roshaniS -- 2021-11-05 19:19
- Added a function to make a dictionary out of the logins table
- Added a function in userdb.py to check if the username exists
- Added a function in userdb.py to check if the username and password are both correct
- Used functions from userdb.py in the register_auth and authenticate functions of loginpage.py so that the user can login and register properly

austinN -- 2021-11-07 14:09
- Added finishPost method in loginPage.py, which takes values from the editBlog form and adds them into the blog table
- editBlog.html now uses the correct actions and will submit the correct data
- The blogs table now has a 4th column 'title' to take the title of the blog entry created

austinN -- 2021-11-08 09:22
- finishPost now displays the user's username in userblog.html after the new post has been created
- Created findBlogs function in userdb.py, which takes the titles and text of the blogs corresponding to a username

roshaniS -- 2021-11-08 09:24
- Removed the message parameter when rendering login.html in the disp_loginpage function so that the login page doesn't display "None"
- Added conditions (with appropriate error messages) in the register_auth function for if the user inputs no username and/or password on the register page
- Added button on the register page (along with the appropriate function) for the user to go back to the login page

roshaniS -- 2021-11-08 20:21
- Removed commented out hardcoded username and password, as they aren't necessary anymore
- Removed diagnostic print statements, were there for testing only
- Added and changed some comments for readability; allows us to understand the code later on

roshaniS -- 2021-11-08 23:31
- Changed one comment
- Moved code from loginpage.py to __init__.py
- Deleted loginpage.py

roshaniS -- 2021-11-09 21:00
- Fixed form tag on editBlog.html
- Fixed functionality of the findBlogs function in userdb.py
- The buttons displayed on the user's personal blog page now display the blog titles correctly (without the parentheses and quotes)

austinN -- 2021-11-10 09:12
- Finished editBlog function in userdb.py, which takes three parameters (username, title, and text) and replaces the text of the row in the database that has the corresponding username and title

roshaniS -- 2021-11-10 18:35
- Changed the button tag in userblog.html to an input tag and added a value attribute with the blog title
- Added to the blogPage function in __init__.py, which takes the user to a blog page after they click a button on their personal blog page
- Modified indivBlog.html to add the variables needed for render_template in the blogPage function of __init__.py

austinN -- 2021-11-11 11:47
- editBlog in userdb.py edits the title now (might not in later version)
- Added different templates for creating and editing posts

austinN -- 2021-11-11 12:55
- Finished implementation of editBlog

thomasY -- 2021-11-11 15:43
- Created entries for each blog
  - New table for entries
  - Got the entry titles to display on each individual blog page
- Updated text and button names on some templates

thomasY -- 2021-11-11 16:44
- Now the indivBlog page shows the text for each entry under the title.
- Fixed redirects when the user finishes editing or creating a entry to now go to the individual blog page.

roshaniS -- 2021-11-11 17:12
- Fixed buttons on the page that displays all blogs
- Now it successfully redirects to other users' blog pages without allowing the user logged in to create a post on those pages
- However, it doesn't display the other users' blogs if that's not the user that's logged in

thomasY -- 2021-11-11 17:23
- Updated templates so that some buttons only show up if the user in session matches the same user who created the blog/entry.

roshaniS -- 2021-11-11 18:07
- Fixed button on the other users' blog pages (the ones being viewed)
- The button now redirects back to the blogs of the user being viewed, not of the one logged in

roshaniS -- 2021-11-11 18:39
- Added a button on the page that displays all users to return to the blogs of the user who is logged in
- Also added this button on the page that displays another user's blogs
- Reorganized buttons

austinN -- 2021-11-11 19:07
- Fully implemented nav bar

thomasY -- 2021-11-11 19:15
- Fixed viewing the blogs of others
- Changed the heading on all pages
- Fixed Cancel buttons
- Added editing for blogs
- userblog now displays descriptions under their respective buttons

roshaniS -- 2021-11-11 19:41
- Added project name to README
- Changed description of project on README

roshaniS -- 2021-11-11 19:51
- Fixed the user's ability to create blogs

austinN -- 2021-11-11 20:01
- Added updated site map to design doc

roshaniS -- 2021-11-11 20:27
- Added comments to files for readability
- Added static directory

roshaniS -- 2021-11-11 20:32
- Added spaces between blogs on the page listing the user's blogs as buttons

austinN -- 2021-11-11 20:38
- Finished implementing the deletion of blogs and entries

thomasY -- 2021-11-11 20:42
- Updated html templates to preserve whitespace for blog descriptions and entry text.

thomasY -- 2021-11-11 21:34
- Now prevents the user from create a blog or entry with a title that already exists.

thomasY -- 2021-11-11 22:29
- Now prevents the user from editing a blog/entry title to one that already exists.

roshaniS -- 2021-11-11 23:04
- Added code to delete entries when the blog is deleted so that if the user creates a blog with the same name as the deleted one, the entries don't come back

thomasY -- 2021-11-11 23:11
- Changed error messages when login info is incorrect.

roshaniS -- 2021-11-11 23:31
- Corrected launch codes
